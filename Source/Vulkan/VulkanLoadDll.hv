
vkLib := Library^
vkGetInstanceProcAddr := PFN_vkGetInstanceProcAddr
vkEnumerateInstanceExtensionProperties := PFN_vkEnumerateInstanceExtensionProperties
vkEnumerateInstanceLayerProperties := PFN_vkEnumerateInstanceLayerProperties
vkCreateInstance := PFN_vkCreateInstance

innerLoadVKFuncs := !() -> void
{
	if vkLib != null
		return void
	vkLib = GetLibrary("libvulkan.so") 

	vkGetInstanceProcAddr = vkLib.Get("vkGetInstanceProcAddr")->{PFN_vkGetInstanceProcAddr}
	vkEnumerateInstanceExtensionProperties = vkGetInstanceProcAddr(null,"vkEnumerateInstanceExtensionProperties")->{PFN_vkEnumerateInstanceExtensionProperties}
	vkEnumerateInstanceLayerProperties = vkGetInstanceProcAddr(null,"vkEnumerateInstanceLayerProperties")->{PFN_vkEnumerateInstanceLayerProperties}
	vkCreateInstance = vkGetInstanceProcAddr(null,"vkCreateInstance")->{PFN_vkCreateInstance}
}
